"""empty message

Revision ID: 10a62e8663e5
Revises: 
Create Date: 2024-05-04 02:27:46.909510

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '10a62e8663e5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('email', sa.Text(), nullable=False),
    sa.Column('password', sa.Text(), nullable=False),
    sa.Column('role', sa.Text(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('solved', sa.Integer(), nullable=True),
    sa.Column('tasks_id', sa.Text(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    with op.batch_alter_table('Clients', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_Clients_role'), ['role'], unique=False)

    op.create_table('Lengs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('Task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('victorina', sa.Text(), nullable=False),
    sa.Column('practic', sa.Text(), nullable=False),
    sa.Column('otvet', sa.Text(), nullable=False),
    sa.Column('task', sa.Text(), nullable=False),
    sa.Column('lang', sa.Text(), nullable=False),
    sa.Column('creator', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator'], ['Clients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Task')
    op.drop_table('Lengs')
    with op.batch_alter_table('Clients', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_Clients_role'))

    op.drop_table('Clients')
    # ### end Alembic commands ###
